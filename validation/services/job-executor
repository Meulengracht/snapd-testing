#!/bin/bash

set -x

PROJECT=$1
SERVICE_ENV=$2
TESTS_ENV=$3
TESTS_SCRIPT=$4
TESTS_CONFIG=$5
WORKSPACE=$6

if [ ! "$PROJECT" ]; then
	echo "Porject not defined, exiting..."
	exit 1
fi

# Load environment variables
. "${WORKSPACE}/snapd-testing/validation/services/env/common.sh" "$WORKSPACE"
if [ ! -f "${WORKSPACE}/snapd-testing/validation/services/env/${SERVICE_ENV}.sh" ]; then
	echo "configuration file does not exist, exiting"
	exit 1
fi
. "${WORKSPACE}/snapd-testing/validation/services/env/${SERVICE_ENV}.sh"

export HTTPS_PROXY=https://squid.internal:3128
export https_proxy=https://squid.internal:3128
export NO_PROXY=testflinger.canonical.com,api.snapcraft.io
export no_proxy=testflinger.canonical.com,api.snapcraft.io
export $TESTS_ENV

# Prepare tests environment
if [ "$PROJECT" == snapd ]; then
	VERSION="$(${WORKSPACE}/snapd-testing/snap-version.sh $SNAP_UT $TARGET_CHANNEL amd64)"
	export BRANCH="$(${WORKSPACE}/snapd-testing/scripts/git-branch.sh $VERSION)"
fi

# Run spread tests
"${WORKSPACE}/snapd-testing/validation/scripts/${TESTS_SCRIPT}.sh" "$TESTS_CONFIG" | tee "$SPREAD_LOG"

if grep -e "Successful tasks:" -e "Aborted tasks:" -e "Failed tasks:" "$SPREAD_LOG"; then
    echo "Execution finished and spread results included in log"
    EXIT_STATUS=0
else
    echo "Execution finished but not spread results included in log"
    EXIT_STATUS=1
fi

if [ -z "$IMAGE_UT" ]; then
	# Get version and revision for snap under test
	OBJECT_UT="$SNAP_UT"
	VERSION_UT="$(${WORKSPACE}/snapd-testing/scripts/snap-version.sh $SNAP_UT $TARGET_CHANNEL amd64)"
	REVISION_UT="$(${WORKSPACE}/snapd-testing/scripts/snap-revision.sh $SNAP_UT $TARGET_CHANNEL amd64)"
else
	OBJECT_UT="$IMAGE_UT"
	VERSION_UT="$TARGET_CHANNEL"
	REVISION_UT="($(date +%Y%m%d))"
fi

# Integrate results with trello board
"${WORKSPACE}/snapd-testing/validation/services/trello-integrator" "$OBJECT_UT" "$VERSION_UT" "$REVISION_UT" "$TARGET_CHANNEL" "$TRELLO_CONFIG" "$BOARD_UT" "$ARCH_UT" "$SPREAD_LOG" "$SUMMARY_LOG" "$ATTACH_LOG"
if [ -n "$JIRA_ACCESS_TOKEN" ] && [ -n "$JIRA_ACCESS_TOKEN_SECRET" ] && [ -n "$JIRA_KEY_CERT" ]; then
	"${WORKSPACE}/snapd-testing/validation/services/jira-integrator" "$OBJECT_UT" "$VERSION_UT" "$REVISION_UT" "$TARGET_CHANNEL" "$TRELLO_CONFIG" "$BOARD_UT" "$ARCH_UT" "$SPREAD_LOG" "$SUMMARY_LOG" "$ATTACH_LOG"
else
	echo "Skipping jira integration, variables needed in the environment: JIRA_ACCESS_TOKEN, JIRA_ACCESS_TOKEN_SECRET and JIRA_KEY_CERT"
fi

exit "$EXIT_STATUS"